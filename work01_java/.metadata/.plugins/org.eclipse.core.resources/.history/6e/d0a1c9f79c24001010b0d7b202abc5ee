package com.self.service;

import java.util.ArrayList;
import java.util.List;

//
//
import com.self.vo.child.Magazine;
import com.self.vo.child.Novel;
import com.self.vo.parent.Book;

public class BookManagerImpl implements BookManager {
	private int idx = 0;
	private Book[] books = null;
	private List<Book> list = new ArrayList<Book>();

	private static final BookManagerImpl bookManagerImpl = new BookManagerImpl();

	private BookManagerImpl() {
	}

	public static final BookManagerImpl getInstance() {
		return bookManagerImpl;
	}

	@Override
	public void insertBook(Book book) {
		list.add(book);
	}

	@Override
	public void deleteBook(int isbn) {
		boolean check = false;
		for (Book b : list)
			if (b.getIsbn() == isbn) {
				check = list.remove(b);
				if (check == true) {
					System.out.println("해당도서 삭제 완료되었습니다.");
				} else {
					System.out.println("해당도서 삭제 실패하셨습니다.");
				}
			}
	}

	@Override
	public void updateBook(Book book) {
		for (Book b : list) {
			int target = -1;
			if (book.getIsbn() == b.getIsbn()) {
				target = list.indexOf(b);
				System.out.println(target);
				if (target == -1) {
					System.out.println("수정할 타겟을 찾지 못했습니다.");
				} else {
					list.set(list.indexOf(b), book);
					System.out.println("수정 완료 했습니다.");
				}
			}
		}
	}

	@Override
	public Book getBook(int isnb) {
		Book find = null;
		for (Book b : list)
			if (b.getIsbn() == isnb)
				find = b;
		return find;
	}

	@Override
	public List<Book> getAllBook() {
		return list;
	}

	@Override
	public int getNumberOfBooks() {
		return list.size();
	}

	@Override
	public List<Book> searchBookByTitle(String title) {
		List<Book> find = new ArrayList<Book>();
		for (Book b : list) {
			if (b == null)
				break;
			if (b.getTitle().equals(title))
				find.add(b);
		}
		return find;
	}

	@Override
	public List<Book> searchBookByPrice(int min, int max) {
		List<Book> find = new ArrayList<Book>();
		for (Book b : list) {
			if (b != null && min <= (int) b.getPrice() && (int) b.getPrice() <= max)
				find.add(b);
		}
		return find;
	}

	@Override
	public double getSumPriceOfBooks() {
		double sum = 0;
		for (Book b : books) {
			if (b == null)
				break;
			sum += b.getPrice();
		}
		return sum;
	}

	@Override
	public double getAvgPriceOfBooks() {
		return getSumPriceOfBooks() / getNumberOfBooks();
	}

	@Override
	public List<Book> groupBook(String genre) {
		List<Book> find = new ArrayList<Book>();
		int count = 0;
		for (Book b : books) {
			if (b == null)
				break;
			if (b instanceof Novel && ((Novel) b).getGenre().equals(genre)) {
				find.add(b);
			}
		}
		return find;
	}

	@Override
	public List<Book> monthlyBook(int month) {
		Book[] result = new Book[idx];
		int count = 0;
		for (Book b : books) {
			if (b instanceof Magazine && ((Magazine) b).getMonth() == month)
				result[count++] = b;
		}
		Book[] last = new Book[count];
		System.arraycopy(result, 0, last, 0, count);
		return list;
	}
}
